#!/bin/sh

cd `dirname $0`/..

tmpfile=/tmp/update_project_file.$$

START ()
{
    _balise=$1
    _file=$2
    grep -q "//: # ($_balise START)" $_file || echo "Warning: Balise '$_balise' not found in" $_file
    cp $_file $tmpfile.FULL
    >$tmpfile
    awk '{ print } /\/\/: # \('$_balise' START\)/ { exit }' $tmpfile.FULL > $tmpfile.$_balise.START
}

END ()
{
    grep -q "//: # ($_balise END)" $_file || echo "Warning: Balise '$_balise' not found in" $_file
    awk '/\/\/: # \('$_balise' END\)/ { p = 1 } p == 1 { print } ' $tmpfile.FULL > $tmpfile.$_balise.END
    cat $tmpfile.$_balise.START $tmpfile $tmpfile.$_balise.END > $tmpfile.FULL

    if cmp -s $tmpfile.FULL $_file
    then
	    rm -f $tmpfile.FULL
    else
        echo -----------------------------------------------------------
        echo Replacing balise \'$_balise\' with:
        cat $tmpfile
        
        mv $_file /tmp/`basename $_file`.$$
        mv $tmpfile.FULL $_file
    fi
}

# replacement sections

pagesfiles=$(ls src/pages/*/*.ts | grep -v .module.)

START ImportPageComponents src/app/app.module.ts
awk '/export class/ {
    file=FILENAME
    gsub(/^src/, "..", file);
    gsub(/.ts$/, "", file);
    print "import { "$3" } from '"'"'"file"'"'"';"}' $pagesfiles > $tmpfile
END

START PageDeclarations src/app/app.module.ts
awk '/export class/ {print $3","}' $pagesfiles > $tmpfile
END

START PageComponents src/app/app.module.ts
awk '/export class/ {print $3","}' $pagesfiles > $tmpfile
END

widgetfiles=$(ls src/components/*/dmj-*.ts | grep -v .module.)

START ImportWidgetComponents src/app/app.module.ts
awk '/export class/ {
    file=FILENAME
    gsub(/^src/, "..", file);
    gsub(/.ts$/, "", file);
    print "import { "$3" } from '"'"'"file"'"'"';"}' $widgetfiles > $tmpfile
END

START WidgetComponents src/app/app.module.ts
awk '/export class/ {print $3","}' $widgetfiles > $tmpfile
END

START ImportWidgetComponents src/components/components.module.ts
awk '/export class/ {
    file=FILENAME
    gsub(/^src/, "..", file);
    gsub(/.ts$/, "", file);
    print "import { "$3" } from '"'"'"file"'"'"';"}' $widgetfiles > $tmpfile
END

START WidgetComponents src/components/components.module.ts
awk '/export class/ {print $3","}' $widgetfiles > $tmpfile
END

START SelectorWidgetComponents src/components/components.module.ts
awk '/export class/ { 
    name=$3;
    gsub(/Component$/, "", name);
    selector=tolower(substr(name, 1, 1));
    for (i = 2; i <= length(name); i++) {
        c = substr($3, i, 1);
        if (c >= "A" && c <= "Z") {
            selector=selector"-";
        }
        selector=selector""tolower(c);
    }
    print "\""selector"\": "$3","}' $widgetfiles > $tmpfile
END

# update the login.html files with the newest one
loginFiles="src/login.html www/login.html"
newest=`ls -t $loginFiles | head -1`
for f in $loginFiles
do
    cmp -s $newest $f || cp $newest $f
done

# update readme
. ~/domoja/tools/update_readme

INIT

START widgetList
(
    for widgetfile in $(ls src/components/*/dmj-*.ts | grep -v .module. | grep -v dashboard- | grep -v dmj-unknown)
    do
        widget=$(awk -F"dmj-|'" '/selector:/ {print $3}' $widgetfile )
        echo '###' Widget '`'$widget'`'
        awk '/^ *\* /' $widgetfile | sed 's/^ *\* //'
        echo '####' Example
        echo '```'
        echo 'devices:'
        tmpfile=/tmp/w.$$
        grep -E "widget: *\"?$widget[,: \"]" ~/domoja/config/demo.yml | 
            grep -v '#.*' | # to not take commented lines
            grep -E '} *' | # take only complete lines
            head -1 | # keep only 1 example
            sed -e 's/^ */  /' > $tmpfile # do proper indentation
        if [ ! -s $tmpfile ]
        then
            # could not find a one line example, let's try with more lines
            awk '
                BEGIN { display=0  }
                /[ ,]widget: *"*'"$widget"'[,: "]/ {
                    display=1
                    gsub(/^ */,"  ") # indent properly
                    print
                    next
                }
                /^ *- / { 
                    display=0
                }
                display==1 { print }
            ' ~/domoja/config/demo.yml > $tmpfile 
        fi
        cat $tmpfile
        rm -f $tmpfile
        echo '```'
        echo
    done
) >$_TMPREADME
END

CLEANUP
