#!/bin/sh

usage () 
{
    echo "$(basename $0) [set|unset]" >&2
    echo "- set: patch the files so that the angular compilation can work correctly" >&2
    echo "- unset: restore the files in a state they can be edited correctly" >&2
    exit 2
}

projdir=$(dirname "$0")/..
projdir=$(realpath "$projdir")
mode="$1"

patch () {
    local mode="$1"
    shift
    sedstring="sed -i"
    while [ ! -z $1 ]
    do
        local from="$1"
        local to="$2"
        local relative=""
        case "$to" in 
        recompiled/*) 
            relative="RELATIVE"
            ;;
        *)
            relative=""
            ;;
        esac
        case $mode in
        set) 
            echo "About to patch '$from'..."
            sedstring="$sedstring -e 's!^\(import \(.*\) from  *[\"'\"'\"']$from[\"'\"'\"'].*\)!import \\\\2 from \"$relative$to\"; //\\\\1!'"
            ;;
        unset)
            echo "About to unpatch '$to'..."
            sedstring="$sedstring -e 's!^\(import \(.*\) from  *[\"'\"'\"']$relative$to[\"'\"'\"']\);  *//\( *import \(.*\) from  *[\"'\"'\"']$from[\"'\"'\"']\)!\\\\3!'"
            ;;
        *)
            echo "Mode not supported: '$mode'!"
        esac
        
        shift
        shift
    done

    [ "$mode" = set ] && echo -n Patching...
    [ "$mode" = unset ] && echo -n Unpatching...
    for file in $(find $projdir/src -type f -name '*.ts' -print)
    do
        local relative=$(realpath -s --relative-to=$(dirname "$file") "$projdir/src")
        local sedcmd="$(echo "$sedstring" | sed -e "s!RELATIVE!$relative/!g")"
        eval $sedcmd $file
        echo -n '.'
    done
    echo
}

exec 3>&1

recompile () {
    local file="$1"
    local recompiledfile="recompiled/$(echo "$file" | sed -e s!/!-!g)"

    if [ "$mode" = set ]; then
        (
            local source="$projdir/node_modules/$file"
            local target="$projdir/src/$recompiledfile"
            (
                if [  "$target" -nt "$source" ] 
                then
                    echo No need to recompile "$file"
                else
                    local tmpdir=/tmp/recompile$$
                    echo -n Recompiling "$file"...
                    cd / # to have no tconfig.json
                    # use /home/pi/.nvm/versions/node/v18.19.0/bin/tsc (not node_modules/typescript/bin/tsc) because too old to compile this file (typescript version limited to 2.6.2 for ionic/angular)
                    /home/pi/.nvm/versions/node/v18.19.0/bin/tsc --allowJS -outDir "$tmpdir" "$source"
                    mv $tmpdir/$(basename $source) $target
                    rmdir $tmpdir
                    echo 
                fi
            )
        ) >&3
    fi
   echo "$recompiledfile"
}

if [ "$1" != set -a "$1" != unset ]; then
    usage
fi

patch $1 \
        vis-network/peer vis-network/dist/vis-network.js \
        vis-data/peer $(recompile vis-data/dist/esm.js) \
        vis-timeline vis-timeline/dist/vis-timeline-graph2d.esm.js \
        intl-messageformat $(recompile intl-messageformat/intl-messageformat.esm.js) 
        


